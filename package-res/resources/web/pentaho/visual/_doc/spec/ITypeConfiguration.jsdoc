/*!
 * Copyright 2010 - 2015 Pentaho Corporation.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @name pentaho.visual.spec.ITypeConfig
 * @interface
 * @extends pentaho.component.spec.ITypeConfig
 *
 * @classdesc The `spec.ITypeConfig` interface represents a
 * configuration that is applied to
 * certain visualization types, when under certain _usage contexts_.
 *
 * @see pentaho.visual.spec.ITypeInfoExtend
 */

/**
 * Overrides {{#crossLink "IVisualType/args:menuOrdinal"}}{{/crossLink}}.
 *
 * @name pentaho.visual.spec.ITypeConfig#menuOrdinal
 * @type number
 */

/**
 * Overrides {{#crossLink "IVisualType/args:menuSeparator"}}{{/crossLink}}.
 *
 * @name pentaho.visual.spec.ITypeConfig#menuSeparator
 * @type boolean
 */

/**
 * **Optional** method that gets the visualization properties exposed by a visualization editor's document.
 *
 * This method is called with the configured visual type,
 * {{#crossLink "IVisualType"}}{{/crossLink}}, as the `this` JavaScript context.
 *
 * @method getEditorProperties
 *
 * @param {IVisualEditorDocument} editorDoc An object that allows accessing the editor's document and properties.
 * @param {string|string[]} [filterPropsList] A string or an array of strings with
   *   the editor property names
   *   that should be processed. When this is unspecified, _nully_,
   *   or has zero length, then all properties should be processed.
   *
   *   This argument can be seen to indicate a set of editor properties
   *   whose value has changed and need to be updated.
 * @param {Object} filterPropsMap A map whose keys are the property names in _filterPropsList_
 *   and whose values are all `true`.
 *
 * @return {Object} A map of "visual properties".
 */
